"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7404],{5706:e=>{e.exports=JSON.parse('{"functions":[{"name":"Debug","desc":"The main debug handler, adds a prefix to logs sent out and respects logging settings.","params":[{"name":"debugHandler","desc":"The function to run on debug, for example `Debugger.Debug(print, \\"Hello, world!\\")`","lua_type":"(...string | string) -> ()"},{"name":"arguments","desc":"The contents to be passed to the function","lua_type":"{string} | string"},{"name":"prefix","desc":"","lua_type":"string?"},{"name":"respectDebugger","desc":"","lua_type":"boolean?"}],"returns":[],"function_type":"static","source":{"line":71,"path":"src/dynamic/debugger.lua"}},{"name":"GetCallStack","desc":"Gets the call stack of any instance.","params":[{"name":"instance","desc":"The instance to start at","lua_type":"Instance"},{"name":"stackName","desc":"","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"string"}],"function_type":"static","source":{"line":102,"path":"src/dynamic/debugger.lua"}}],"properties":[],"types":[],"name":"Debugger","desc":"The parent of all classes.","source":{"line":8,"path":"src/dynamic/debugger.lua"}}')}}]);