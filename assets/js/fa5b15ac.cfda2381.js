"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7404],{5706:e=>{e.exports=JSON.parse('{"functions":[{"name":"Debug","desc":"The main debug handler, adds a prefix to logs sent out and respects logging settings.","params":[{"name":"debugHandler","desc":"The function to run on debug, for example `Debugger.Debug(print, \\"Hello, world!\\")`","lua_type":"(...T) -> () | (message: T, level: number) -> ()"},{"name":"arguments","desc":"The contents to be passed to the function","lua_type":"{string} | string"},{"name":"prefix","desc":"The prefix to put in front of the debug","lua_type":"string?"},{"name":"respectDebugger","desc":"Whether or not to respect the debugger, should always be true for correct use","lua_type":"boolean?"}],"returns":[],"function_type":"static","source":{"line":81,"path":"src/libraries/debugger.lua"}},{"name":"GetCallStack","desc":"Gets the call stack of any instance.","params":[{"name":"instance","desc":"The instance to start at","lua_type":"Instance"},{"name":"stackName","desc":"The name of the stack, defaults to the stack number","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"string"}],"function_type":"static","source":{"line":114,"path":"src/libraries/debugger.lua"}}],"properties":[],"types":[{"name":"CallStack","desc":"The callstack type.","lua_type":"{Name: string, Source: string, DefinedLine: number}","source":{"line":16,"path":"src/libraries/debugger.lua"}}],"name":"Debugger","desc":"The parent of all classes.","source":{"line":8,"path":"src/libraries/debugger.lua"}}')}}]);