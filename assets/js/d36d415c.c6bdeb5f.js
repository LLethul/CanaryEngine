"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7672],{81841:e=>{e.exports=JSON.parse('{"functions":[{"name":"DeleteProfileAsync","desc":"Completely wipes the data of the key `userId`, good for complying with GDPR practices.","params":[{"name":"target","desc":"The user id / key to erase the data of","lua_type":"number | string"}],"returns":[],"function_type":"method","yields":true,"source":{"line":201,"path":"src/internal/easyprofile.lua"}},{"name":"GetProfileAsync","desc":"Fetches the data off the key `userId`, this will only read data and does not load it.","params":[{"name":"target","desc":"The user id / key to get of the data of","lua_type":"number | string"}],"returns":[{"desc":"","lua_type":"{[string]: any}?\\r\\n"}],"function_type":"method","yields":true,"source":{"line":228,"path":"src/internal/easyprofile.lua"}},{"name":"LoadProfileAsync","desc":"Loads the data off the key `userId`. All edits to this data will be saved and be able to be used next session.","params":[{"name":"owner","desc":"The owner of profile to load the data of","lua_type":"Player | string"},{"name":"reconcileData","desc":"Whether or not to reconcile the data of the profile, defaults to true","lua_type":"boolean?"},{"name":"profileClaimedHandler","desc":"The function to run when the profile is already claimed","lua_type":"((placeId: number, gameJobId: string) -> (ProfileLoadType))?"}],"returns":[{"desc":"","lua_type":"ProfileObject?"}],"function_type":"method","yields":true,"source":{"line":267,"path":"src/internal/easyprofile.lua"}},{"name":"UnclaimSessionLock","desc":"Unclaims the session lock that the profile holds, throwing a warning if they are not session locked. This is usually because you did not load the profile data correctly.\\n\\n`valuesToSave` Example usage:\\n\\n```lua\\nPlayers.PlayerRemoving:Connect(function(player)\\n\\tMyDataStore:UnclaimSessionLock(player, {\\n\\t\\tCoins = player:GetAttribute(\\"Coins\\") -- Make sure coins is a member of your profile data, or it will skip over it.\\n\\t})\\nend)\\n```","params":[{"name":"owner","desc":"The owner of the profile to unclaim the session lock of","lua_type":"Player | string"},{"name":"valuesToSave","desc":"Values to save that are not already saved to the profile data, for example attributes that need to be saved on player removing","lua_type":"dictionary?"},{"name":"hopReadyCallback?","desc":"The function to run when a server hop is ready, leaving this blank will disable this feature","lua_type":"(() -> ())?"}],"returns":[],"function_type":"method","source":{"line":368,"path":"src/internal/easyprofile.lua"}},{"name":"SetGlobalKeyAsync","desc":"Sets a global key for target profile, regardless of whether they share the same `JobId` as the sender or they are offline.","params":[{"name":"target","desc":"The target to set the global key of","lua_type":"number | string"},{"name":"key","desc":"The key to send to the target","lua_type":"string"},{"name":"value","desc":"The value of `key`","lua_type":"any"}],"returns":[],"function_type":"method","yields":true,"source":{"line":414,"path":"src/internal/easyprofile.lua"}},{"name":"RemoveGlobalKeyAsync","desc":"Removes the global key that sent by using `ProfileStoreObject:SetGlobalKeyAsync` with the key ID of `keyId`. This only applies if it has not been recieved yet.","params":[{"name":"target","desc":"The target to remove the global key of","lua_type":"number | string"},{"name":"keyId","desc":"The `keyId` of the key to remove","lua_type":"number"}],"returns":[],"function_type":"method","yields":true,"source":{"line":448,"path":"src/internal/easyprofile.lua"}}],"properties":[{"name":"SessionLockClaimed","desc":"Fires when a session lock has been claimed.","lua_type":"SignalController<Player | string>","tags":["Event"],"source":{"line":80,"path":"src/internal/easyprofile.lua"}},{"name":"SessionLockUnclaimed","desc":"Fires when a session lock has been unclaimed.","lua_type":"SignalController<Player | string>","tags":["Event"],"source":{"line":88,"path":"src/internal/easyprofile.lua"}},{"name":"_Pattern","desc":"The profile name pattern.","lua_type":"string","private":true,"source":{"line":96,"path":"src/internal/easyprofile.lua"}}],"types":[],"name":"ProfileStoreObject","desc":"The object that holds the `ProfileStoreObject`.","realm":["Server"],"source":{"line":71,"path":"src/internal/easyprofile.lua"}}')}}]);