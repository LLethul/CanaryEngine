[{"title":"CanaryEngine","type":0,"sectionRef":"#","url":"/CanaryEngine/api/CanaryEngine","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#types","content":" "},{"title":"CustomScriptSignal​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#CustomScriptSignal","content":"&lt;/&gt; interface CustomScriptSignal { Connect: ( self: CustomScriptSignal&lt;T&gt;?, func: (data: {T}) → () ) → (ScriptConnection) Wait: (self: CustomScriptSignal&lt;T&gt;?) → ({T}) Once: ( self: CustomScriptSignal&lt;T&gt;?, func: (data: {T}) → () ) → (ScriptConnection) Fire: ( self: CustomScriptSignal&lt;T&gt;?, data: ({T} | T)? ) → () DisconnectAll: (self: CustomScriptSignal&lt;T&gt;?) → () } A custom script signal, similar to a ScriptSignal  "},{"title":"NetworkControllerData:​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#NetworkControllerData:","content":"&lt;/&gt; type NetworkControllerData: = ({T} | T) The type of the data being sent through a network controller, though it is generally known as a rule that sent data will be converted into a table.  "},{"title":"ClientNetworkController​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#ClientNetworkController","content":"&lt;/&gt; interface ClientNetworkController { Connect: ( self: ClientNetworkController&lt;T&gt;?, func: (data: {T}) → () ) → (ScriptConnection) Once: ( self: ClientNetworkController&lt;T&gt;?, func: (data: {T}) → () ) → (ScriptConnection) Wait: (self: ClientNetworkController&lt;T&gt;?) → ({T}) Fire: ( self: ClientNetworkController&lt;T&gt;?, data: ({T} | T)? ) → () Invoke: ( self: ClientNetworkController&lt;T&gt;?, data: ({T} | T)? ) → ({T}) OnInvoke_DISABLED: ( self: ClientNetworkController&lt;T&gt;?, callback: (data: {T}) → () ) → () } A ClientNetworkController is basically a mixed version of a RemoteEvent and RemoteFunction. It has better features and is more performant.  "},{"title":"ServerNetworkController​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#ServerNetworkController","content":"&lt;/&gt; interface ServerNetworkController { Connect: ( self: ServerNetworkController&lt;T&gt;?, func: ( sender: Player , data: {T} ) → () ) → (ScriptConnection) Once: ( self: ServerNetworkController&lt;T&gt;?, func: ( sender: Player , data: {T} ) → () ) → (ScriptConnection) Wait: (self: ServerNetworkController&lt;T&gt;?) → ( Player , {T} ) Fire: ( self: ServerNetworkController&lt;T&gt;?, recipient: Player | {Player }, data: ({T} | T)? ) → () Invoke_DISABLED: ( self: ServerNetworkController&lt;T&gt;?, recipient: Player , data: ({T} | T)? ) → ({T}) OnInvoke: ( self: ServerNetworkController&lt;T&gt;?, callback: ( sender: Player , data: {T} ) → () ) → () } A ServerNetworkController is basically a mixed version of a RemoteEvent and RemoteFunction. It has better features and is more performant, though this is the server-sided API. "},{"title":"Properties​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#properties","content":" "},{"title":"Runtime​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#Runtime","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; CanaryEngine.Runtime: { RuntimeSettings: RuntimeSettings, RuntimeContext: RuntimeContext } The runtime property contains settings that are set during runtime, and the current context of the server/client.  "},{"title":"Libraries​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#Libraries","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; CanaryEngine.Libraries: { Utility: Utility, Benchmark: Benchmark, Statistics: Statistics, Serialize: Serialize } The libraries property contains useful libraries like Benchmark or Serialize. "},{"title":"Functions​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#functions","content":" "},{"title":"GetEngineServer​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#GetEngineServer","content":"This item only works when running on the server. Server &lt;/&gt; CanaryEngine.GetEngineServer() → EngineServer? Gets the server-sided architecture of CanaryEngine  "},{"title":"GetEngineClient​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#GetEngineClient","content":"This item only works when running on the client. Client This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; CanaryEngine.GetEngineClient() → EngineClient? Gets the client-sided architecture of CanaryEngine  "},{"title":"CreateSignal​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#CreateSignal","content":"&lt;/&gt; CanaryEngine.CreateSignal() → CustomScriptSignal&lt;any&gt; Creates a new signal that is then given a reference in the signals table.  "},{"title":"GetLatestPackageVersionAsync​","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine#GetLatestPackageVersionAsync","content":"This item only works when running on the server. Server This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; CanaryEngine.GetLatestPackageVersionAsync( package: Instance ,-- The package to check the version of, must have the required attributes. warnIfNotLatestVersion: boolean?,-- An optional setting to warn the user if the provided package is not up-to-date, defaults to true. respectDebugger: boolean?-- An optional setting to respect the debugger when warning the user, only applies when warnIfNotLatestVersion is true. ) → number? Checks the latest version of the provided package, and returns the latest version if you gave version permissions. "},{"title":"Errors","type":1,"pageTitle":"CanaryEngine","url":"/CanaryEngine/api/CanaryEngine##","content":"Type\tDescription&quot;Asset description must have 'Version: (number) or 'v(number)'&quot;\tThis means that the description of your asset uploaded to Roblox does not contain the latter. Example of description: My awesome new package for CanaryEngine! Version: 3.4.7 "},{"title":"CanaryEngineServer","type":0,"sectionRef":"#","url":"/CanaryEngine/api/CanaryEngineServer","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CanaryEngineServer","url":"/CanaryEngine/api/CanaryEngineServer#properties","content":" "},{"title":"Media​","type":1,"pageTitle":"CanaryEngineServer","url":"/CanaryEngine/api/CanaryEngineServer#Media","content":"This item only works when running on the server. Server This item is read only and cannot be modified. Read Only &lt;/&gt; CanaryEngineServer.Media: { Server: Folder , Replicated: Folder } A reference to the Media folder on the Server, also gives access to replicated media.  "},{"title":"Packages​","type":1,"pageTitle":"CanaryEngineServer","url":"/CanaryEngine/api/CanaryEngineServer#Packages","content":"This item only works when running on the server. Server This item is read only and cannot be modified. Read Only &lt;/&gt; CanaryEngineServer.Packages: { Server: Folder , Replicated: Folder } A reference to the Packages folder on the Server, also gives access to replicated Packages. "},{"title":"Functions​","type":1,"pageTitle":"CanaryEngineServer","url":"/CanaryEngine/api/CanaryEngineServer#functions","content":" "},{"title":"CreateNetworkController​","type":1,"pageTitle":"CanaryEngineServer","url":"/CanaryEngine/api/CanaryEngineServer#CreateNetworkController","content":"&lt;/&gt; CanaryEngineServer.CreateNetworkController( controllerName: string-- The name of the controller ) → ServerNetworkController&lt;any&gt; Creates a new network controller on the server, with the name of controllerName tip You can set the data type of a network controller after it being made like the following: local NetworkController: CanaryEngine.ServerNetworkController&lt;number&gt; = EngineServer.CreateNetworkController(&quot;MyNewNetworkController&quot;) -- assuming you are sending over and recieving a number  "},{"title":"Benchmark","type":0,"sectionRef":"#","url":"/CanaryEngine/api/Benchmark","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Benchmark","url":"/CanaryEngine/api/Benchmark#functions","content":" "},{"title":"CreateBenchmark​","type":1,"pageTitle":"Benchmark","url":"/CanaryEngine/api/Benchmark#CreateBenchmark","content":"&lt;/&gt; Benchmark.CreateBenchmark() → BenchmarkObject Creates a new Benchmark object to be used. "},{"title":"BenchmarkObject","type":0,"sectionRef":"#","url":"/CanaryEngine/api/BenchmarkObject","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#properties","content":" "},{"title":"IsCompleted​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#IsCompleted","content":"&lt;/&gt; BenchmarkObject.IsCompleted: boolean A boolean to decide if the benchmark should be GC'ed.  "},{"title":"Destroying​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#Destroying","content":"&lt;/&gt; BenchmarkObject.Destroying: ScriptSignal A signal that fires when the benchmark has been disposed of.  "},{"title":"StartTime​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#StartTime","content":"&lt;/&gt; BenchmarkObject.StartTime: number The time (in seconds) the benchmark was started at.  "},{"title":"EndTime​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#EndTime","content":"&lt;/&gt; BenchmarkObject.EndTime: number The time (in seconds) the benchmark was ended at. "},{"title":"Functions​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#functions","content":" "},{"title":"SetFunction​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#SetFunction","content":"&lt;/&gt; BenchmarkObject:SetFunction( timesToRun: number,-- The amount of times to run func. func: (timesRan: number) → ()-- The function to run for each timesToRun index, has a timesRan argument which is how many times the benchmark has run so far. ) → number? Sets the function to be ran timesToRun amount of times. danger BenchmarkObject:Stop is already called after being finished, calling the latter manually will result in an error.  "},{"title":"Start​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#Start","content":"&lt;/&gt; BenchmarkObject:Start() → () Starts the benchmark object.  "},{"title":"Stop​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#Stop","content":"&lt;/&gt; BenchmarkObject:Stop() → number Stops the benchmark from running and destroys it, returns the amount of time it took to complete the code above it.  "},{"title":"GetCurrentTime​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#GetCurrentTime","content":"&lt;/&gt; BenchmarkObject:GetCurrentTime() → number? Gets the current elapsed time of the benchmark.  "},{"title":"Destroy​","type":1,"pageTitle":"BenchmarkObject","url":"/CanaryEngine/api/BenchmarkObject#Destroy","content":"&lt;/&gt; BenchmarkObject:Destroy() → () Destroys the BenchmarkObject, this is done automatically after SetFunction is finished of Stop is called. "},{"title":"CanaryEngineClient","type":0,"sectionRef":"#","url":"/CanaryEngine/api/CanaryEngineClient","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CanaryEngineClient","url":"/CanaryEngine/api/CanaryEngineClient#properties","content":" "},{"title":"Player​","type":1,"pageTitle":"CanaryEngineClient","url":"/CanaryEngine/api/CanaryEngineClient#Player","content":"This item only works when running on the client. Client This item is read only and cannot be modified. Read Only &lt;/&gt; CanaryEngineClient.Player: Player  A simple reference to the Players.LocalPlayer.  "},{"title":"PlayerGui​","type":1,"pageTitle":"CanaryEngineClient","url":"/CanaryEngine/api/CanaryEngineClient#PlayerGui","content":"This item only works when running on the client. Client This item is read only and cannot be modified. Read Only &lt;/&gt; CanaryEngineClient.PlayerGui: StarterGui  A simple reference to the Player.PlayerGui, useful for automatic typing and API simplicity.  "},{"title":"PlayerBackpack​","type":1,"pageTitle":"CanaryEngineClient","url":"/CanaryEngine/api/CanaryEngineClient#PlayerBackpack","content":"This item only works when running on the client. Client This item is read only and cannot be modified. Read Only &lt;/&gt; CanaryEngineClient.PlayerBackpack: StarterPack  A simple reference to the player's Backpack, useful for automatic typing and API simplicity.  "},{"title":"Media​","type":1,"pageTitle":"CanaryEngineClient","url":"/CanaryEngine/api/CanaryEngineClient#Media","content":"This item only works when running on the client. Client This item is read only and cannot be modified. Read Only &lt;/&gt; CanaryEngineClient.Media: { Client: Folder , Replicated: Folder } A reference to the Media folder on the client, also gives access to replicated media.  "},{"title":"Packages​","type":1,"pageTitle":"CanaryEngineClient","url":"/CanaryEngine/api/CanaryEngineClient#Packages","content":"This item only works when running on the client. Client This item is read only and cannot be modified. Read Only &lt;/&gt; CanaryEngineClient.Packages: { Client: Folder , Replicated: Folder } A reference to the Packages folder on the client, also gives access to replicated Packages.  "},{"title":"LocalObjects​","type":1,"pageTitle":"CanaryEngineClient","url":"/CanaryEngine/api/CanaryEngineClient#LocalObjects","content":"This item only works when running on the client. Client This item is read only and cannot be modified. Read Only deprecated in v2 &lt;/&gt; This was deprecated in v2 Use PlayerBackpack and PlayerGui instead. CanaryEngineClient.LocalObjects: dictionary Local objects of the player. "},{"title":"Functions​","type":1,"pageTitle":"CanaryEngineClient","url":"/CanaryEngine/api/CanaryEngineClient#functions","content":" "},{"title":"CreateNetworkController​","type":1,"pageTitle":"CanaryEngineClient","url":"/CanaryEngine/api/CanaryEngineClient#CreateNetworkController","content":"&lt;/&gt; CanaryEngineClient.CreateNetworkController( controllerName: string-- The name of the controller ) → ClientNetworkController&lt;any&gt; Creates a new network controller on the client, with the name of controllerName tip You can set the data type of a network controller after it being made like the following: local NetworkController: CanaryEngine.ClientNetworkController&lt;boolean&gt; = EngineClient.CreateNetworkController(&quot;MyNewNetworkController&quot;) -- assuming you are sending over and recieving a boolean  "},{"title":"Statistics","type":0,"sectionRef":"#","url":"/CanaryEngine/api/Statistics","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Statistics","url":"/CanaryEngine/api/Statistics#functions","content":" "},{"title":"GetMedian​","type":1,"pageTitle":"Statistics","url":"/CanaryEngine/api/Statistics#GetMedian","content":"&lt;/&gt; Statistics.GetMedian( numberList: {number}-- The dataset to perform the action on. ) → number Gets the number that is in the middle of the dataset, more info can be found here. Here's an example scenario: local CollectedData = {6, 8, 3, 7, 9, 0, 4, 1} print(Statistics.GetMedian(CollectedData)) -- Output: 8   "},{"title":"GetMean​","type":1,"pageTitle":"Statistics","url":"/CanaryEngine/api/Statistics#GetMean","content":"&lt;/&gt; Statistics.GetMean( numberList: {number}-- The dataset to perform the action on. ) → number Gets the most common number in the dataset, more info can be found here. Here's an example scenario: local CoinsForPlayers = {651, 8801, 371, 79, 918, 0, 46, 183} print(Statistics.GetMean(CoinsForPlayers)) -- Get the average amount of coins each player has, keep in mind 8801 will skew the data. -- Output: 1381.125   "},{"title":"GetMode​","type":1,"pageTitle":"Statistics","url":"/CanaryEngine/api/Statistics#GetMode","content":"&lt;/&gt; Statistics.GetMode( numberList: {number}-- The dataset to perform the action on. ) → number? Gets the number that occurs most in the provided dataset, nil if none or each number occurs the same amount of times. More info can be found here "},{"title":"Utility","type":0,"sectionRef":"#","url":"/CanaryEngine/api/Utility","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#functions","content":" "},{"title":"nilparam​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#nilparam","content":"&lt;/&gt; Utility.nilparam( param: T?,-- The param to check the value of. default: T-- The default value to be provided if param is nil. ) → T Checks if param is nil, and if it is, it will return the provided default value.  "},{"title":"assert​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#assert","content":"&lt;/&gt; Utility.assert( assertion: T,-- The param to check the value of. msg: string,-- The error message to throw if assertion is not truthy. ...: any-- Data to format in msg. ) → T? Basically just assert, but more performant.  "},{"title":"xassert​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#xassert","content":"&lt;/&gt; Utility.xassert( assertion: T,-- The param to check the value of. handler: () → ()-- The function to run if assertion is not truthy. ) → T? Basically just assert and xpcall combined.  "},{"title":"assertmulti​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#assertmulti","content":"&lt;/&gt; Utility.assertmulti( ...: {a | b | {any}?}-- The assertion parameters, parameters are in same order as Utility.assert. ) → T? Basically just assert but can handle multple assertions in one function, cutting down on calls and wasted resources.  "},{"title":"DeepCopy​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#DeepCopy","content":"&lt;/&gt; Utility.DeepCopy( t: {a}-- The table to deep copy. Can be a dictionary or an array. ) → {a} Since table.clone does not copy tables nested deeper then its parent, we created a function to deep copy tables which copies all tables nested inside it as well as the parent table.  "},{"title":"IsDictionary​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#IsDictionary","content":"&lt;/&gt; Utility.IsDictionary( t: {any}-- The table to check the type of. ) → boolean Tells whether the provided table, t, is a dictionary or not. True if yes, and vice versa.  "},{"title":"DictionaryToArray​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#DictionaryToArray","content":"&lt;/&gt; Utility.DictionaryToArray( d: {[a]: b}-- The dictionary to convert. ) → {{a | b}}? Converts a dictionary to an array, can be useful for when cutting down on data costs. It essentially serializes a dictionary.  "},{"title":"ArrayToDictionary​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#ArrayToDictionary","content":"&lt;/&gt; Utility.ArrayToDictionary( t: {{a | b}}-- The array to convert. ) → {[a]: b}? Converts an array to a dictionary, this is basically the deserializer for Utility.DictionaryToArray.  "},{"title":"dictionaryLen​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#dictionaryLen","content":"&lt;/&gt; Utility.dictionaryLen( d: {[any]: any}-- The dictionary to set the metamethod to. ) → () Running this function on a dictionary allows you to use the length (#) operator on dictionaries. Length operator  "},{"title":"GetAncestors​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#GetAncestors","content":"&lt;/&gt; Utility.GetAncestors( instance: Instance -- The instance to get the ancestors of. ) → {Instance } Returns every ancestor of instance, excluding the DataModel  "},{"title":"WaitForChildWhichIsA​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#WaitForChildWhichIsA","content":"&lt;/&gt; Utility.WaitForChildWhichIsA( instance: Instance ,-- The instance to perform the function on. className: string,-- The Instance.ClassName to look for, uses Instance:IsA. timeOut: number?-- The amount of time to wait until the child request is timed out. ) → Instance  Basically Instance:WaitForChild and Instance:FindFirstChildWhichIsA combined.  "},{"title":"WaitForChildOfClass​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#WaitForChildOfClass","content":"&lt;/&gt; Utility.WaitForChildOfClass( instance: Instance ,-- The instance to perform the function on. className: string,-- The Instance.ClassName to look for. timeOut: number?-- The amount of time to wait until the child request is timed out. ) → Instance  Basically Instance:WaitForChild and Instance:FindFirstChildOfClass combined.  "},{"title":"ConflictingValues​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#ConflictingValues","content":"&lt;/&gt; Utility.ConflictingValues( values: {any},-- The list of values to be checked. sep: string?-- If values are conflicting with each other, an error of the indexes are thrown and this is the separator between each one. ) → ( boolean, string? ) Iterates through a list of values and returns a boolean and a string. If the value is true, then a string will be returned with a list of values and their order in the original list. The function is useful for times when you only want 1 value to be used at a time. Example: local MyValues = {true, true, false} print(Utility.ConflictingValues(MyValues)) -- Output: true Conflicting Values: 1, 2   "},{"title":"TableToString​","type":1,"pageTitle":"Utility","url":"/CanaryEngine/api/Utility#TableToString","content":"&lt;/&gt; Utility.TableToString( t: {[any]: any},-- The table to convert to a string. sep: string?,-- The separator between each key + value i: number?,-- The index to start at. (only applies to arrays) j: number?-- The index to end at. (only applies to arrays) ) → string? Converts a table to a string, useful for displaying tables on GUI's. This is compatible with nested tables, dictionaries, and arrays. Example: local MyTable = {&quot;This table&quot;, &quot;was converted into&quot;, 1, &quot;string&quot;, &quot;!&quot;} print(Utility.TableToString(MyTable, &quot;, &quot;)) -- Output: {[1] = &quot;This table&quot;, [2] = &quot;was converted into&quot;, [3] = 1, [4] = &quot;string&quot;, [5] = &quot;!&quot;}  "},{"title":"Installation","type":0,"sectionRef":"#","url":"/CanaryEngine/docs/Installation","content":"","keywords":""},{"title":"Roblox Marketplace​","type":1,"pageTitle":"Installation","url":"/CanaryEngine/docs/Installation#roblox-marketplace","content":"Navigate to the install page of the Canary Studio plugin, you can find that hereOpen Roblox Studio and install the plugin from within your plugin inventory. "},{"title":"Download on Github​","type":1,"pageTitle":"Installation","url":"/CanaryEngine/docs/Installation#download-on-github","content":"Navigate to the latest release of CanaryEngine on Github, you can find that hereChoose CanaryStudioPlugin.rbxm to downloadOpen Roblox Studio, and drag CanaryStudioPlugin.rbxm from your download directory into studio.Right click the plugin, and choose Save as Local Plugin "},{"title":"Features","type":0,"sectionRef":"#","url":"/CanaryEngine/docs/Features","content":"Features CanaryEngine is a really lightweight framework, but is also very feature-packed! Here are a few notable features that make CanaryEngine standout: Type Safe - Fully compatible with Roblox’s intellisense and Roblox LSP. Simple API - There is very little API to interact with, therefore it shouldn’t take long to get used it! Fully Documented - All functions in the main module are fully documented, along with the types Easy Setup - Simply require the module on the server, and your game will be set up automatically. Nicely Organized - There are folders such as Scripts, Packages, and Media each with their own client, server, and shared (later referred to as replicated) folders. Lightweight - The framework is really lightweight, with only about 4 modules needed to startup and function, totaling to ~400 lines of code (including function documentation). Secure - The framework is super secure, minimizing as much client code as possible and when not needed. The current networking library that is being used is also super secure and partially immune to exploits such as RemoteSpy Easy Modding - Not completely satisfied with the framework I have provided you with? Since all of the internal API is split into separate modules, it should be easy to create your own init file.","keywords":""},{"title":"Intro","type":0,"sectionRef":"#","url":"/CanaryEngine/docs/intro","content":"Intro CanaryEngine is an all-new framework built with beginners and power-users in mind. With a built in networking structure thats powerful and super performant, and a package manager that is built into studio, setting up CanaryEngine and using it should be a breeze. One of the main selling points of the framework is that many of the current frameworks like Knit are kind of confusing to use and set up, along with the fact that it doesn't support instances as packages. Nothing special here, CanaryEngine was only designed to organize and manage at scale.","keywords":""}]